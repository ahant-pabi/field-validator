group 'com.github.ahant-pabi'
version "${app_version}"

ext {
    forPublishing = project.hasProperty("publish")
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}"
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3"
    }
}
apply plugin: 'kotlin'
if (forPublishing) {
    apply plugin: 'io.codearte.nexus-staging'
}

sourceCompatibility = "${jdk_version}"

repositories {
    mavenCentral()
}

test {
    useTestNG() {
        parallel = "tests"
        useDefaultListeners = false
        listeners = ['org.uncommons.reportng.HTMLReporter']
        suiteXmlFiles = fileTree(dir: "${rootDir}/src/test/resources", include: "testng.xml") as List
    }
    testLogging.showStandardStreams = true
    ignoreFailures = false
    reports.junitXml.enabled = false
    reports.html.enabled = false
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}"
    compile 'com.google.guava:guava:19.0'
    compile 'org.slf4j:slf4j-api:1.7.18'
    compile 'org.slf4j:slf4j-simple:1.7.18'
    testCompile 'org.testng:testng:6.9.10'
    testCompile 'com.google.inject:guice:4.0'
    testCompile 'org.uncommons:reportng:1.1.4'
    testCompile 'org.mockito:mockito-all:1.10.19'
}

apply plugin: 'maven'
apply plugin: 'signing'

jar {
    manifest {
        attributes 'Implementation-Title': rootProject.name,
                'Implementation-Version': version
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}
if (forPublishing) {
    signing {
        sign configurations.archives
    }

    archivesBaseName = rootProject.name

    nexusStaging {
        username = ossrhUser
        password = ossrhPassword
    }

    uploadArchives.dependsOn test

    uploadArchives {
        outputs.upToDateWhen { false }
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                if (project.property("publish") == "remote") {
                    println "Artifacts will be published to central maven repo"
                    // Publish to OSSRH(maven central staging repo)
                    repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                        authentication(userName: ossrhUser, password: ossrhPassword)
                    }
                    // Publish to OSSRH(maven central snapshot repo)
                    snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                        authentication(userName: ossrhUser, password: ossrhUser)
                    }
                } else {
                    // Publish to local repo
                    println "Artifacts will be published to local maven repo"
                    repository(url: "file://" + System.getProperty("user.home") + "/.m2/repository")
                }
                pom.project {
                    name rootProject.name
                    packaging 'jar'
                    // optionally artifactId can be defined here
                    description 'Annotation based input field validator.'
                    url 'https://github.com/ahant-pabi/field-validator'

                    scm {
                        connection 'scm:git:https://github.com/ahant-pabi/field-validator.git'
                        developerConnection 'scm:git:https://github.com/ahant-pabi/field-validator.git'
                        url 'https://github.com/ahant-pabi/field-validator.git'
                    }

                    licenses {
                        license {
                            name 'The Apache License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id 'ahant'
                            name 'Pabitra Muni'
                            email 'mailtopabi@gmail.com'
                        }
                    }
                }
            }
        }
    }
}